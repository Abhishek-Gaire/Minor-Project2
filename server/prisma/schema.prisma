// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model School {
  id        String   @id @default(uuid())
  name      String   @unique
  address   String
  city      String
  state     String
  contact   String
  email     String   @unique
  students  Student[]
  teachers  Teacher[]
  admins    Admin[]
  createdAt DateTime @default(now())

  @@map("schools")
}

model Student {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  schoolId String
  school   School @relation(fields: [schoolId], references: [id])
  createdAt DateTime @default(now())

  @@map("students")
}

model Teacher {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  schoolId String
  school   School @relation(fields: [schoolId], references: [id])
  createdAt DateTime @default(now())

  @@map("teachers")
}

model Admin {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  schoolId String
  school   School @relation(fields: [schoolId], references: [id])
  createdAt DateTime @default(now())

  @@map("admins")
}

model SuperAdmin {
  id       String @id @default(uuid())
  name     String
  email    String @unique
  password String
  createdAt DateTime @default(now())

  @@map("super_admins")
}
model Assignment {
  id           String   @id @default(uuid())
  title        String
  fileUrl      String
  uploadedById String
  role         String
  uploadedAt   DateTime @default(now())

  // Relations
  student Student? @relation(fields: [uploadedById], references: [id])
  teacher Teacher? @relation(fields: [uploadedById], references: [id])
}


